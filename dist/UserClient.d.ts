import Client from './Client';
import Track from './structures/Track';
import Artist from './structures/Artist';
import { AffinityOptions, Image, RawObject } from './Types';
/**
 * A class which accesses the current user endpoints!
 */
export default class UserClient {
    client: Client;
    name: string;
    country: string;
    email: string;
    externalUrls: RawObject;
    totalFollowers: number;
    href: string;
    id: string;
    images: Image[];
    product: 'premium' | 'free' | 'open' | 'unknown';
    uri: string;
    affinity: {
        tracks: Track[];
        artists: Artist[];
    };
    /**
     * The same client but manages current user endpoints and requires a current user api token not a token which is generated by client and client secret
     *
     * @param token Your spotify current user token or provide your spotify client!
     * @example const user = new UserClient('token'); // or
     * const user = new UserClient(client);
     */
    constructor(client: Client);
    constructor(token: string);
    /**
     * Returns current user details
     *
     * @example const user = await user.info();
     */
    info(): Promise<this>;
    /**
     * Returns the top tracks of the current user!
     *
     * @param options Basic AffinityOptions
     * @example await user.getTopTracks();
     */
    getTopTracks(options?: AffinityOptions): Promise<Track[]>;
    /**
     * Returns the top artists of the current user!
     *
     * @param options Basic AffinityOptions
     * @example await user.getTopArtists();
     */
    getTopArtists(options?: AffinityOptions): Promise<Artist[]>;
    /**
     * Follow a playlist by id!
     *
     * @param id The id of the playlist!
     * @param options Options such as public!
     * @example await client.user.followPlaylist('id');
     */
    followPlaylist(id: string, options?: {
        public?: boolean;
    }): Promise<boolean>;
    /**
     * Unfollow a playlist by id!
     *
     * @param id The id of the playlist!
     * @example await client.user.unfollowPlaylist('id');
     */
    unfollowPlaylist(id: string): Promise<boolean>;
}
