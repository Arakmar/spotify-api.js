"use strict";var __importDefault=this&&this.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(exports,"__esModule",{value:!0});const Error_1=require("../Error"),Spotify_1=__importDefault(require("../Spotify"));class Track extends Spotify_1.default{async search(r,e){return new Promise((async(t,a)=>{r||a(new Error_1.MissingParamError("missing query")),e||(e={});try{let a=(await this.fetch({link:"v1/search",params:{q:encodeURIComponent(r),type:"track",market:"US",limit:e.limit||20}})).tracks.items;if(e.advanced)for(let r=0;r<a.length;r++){let e=await this.getCodeImage(a[r].uri);a[r].codeImage=e.image,a[r].dominantColor=e.dominantColor}t(a)}catch(r){a(new Error_1.UnexpectedError(r))}}))}async get(r){return new Promise((async(e,t)=>{r||t(new Error_1.MissingParamError("missing id"));try{const t=await this.fetch({link:"v1/tracks/"+r}),a=await this.getCodeImage(t.uri);t.codeImage=a.image,t.dominantColor=a.dominantColor,e(t)}catch(r){t(new Error_1.UnexpectedError(r))}}))}async audioFeatures(r){return new Promise((async(e,t)=>{r||t(new Error_1.MissingParamError("missing id"));try{e(await this.fetch({link:"v1/audio-features/"+r}))}catch(r){t(new Error_1.UnexpectedError(r))}}))}async audioAnalysis(r){return new Promise((async(e,t)=>{r||t(new Error_1.MissingParamError("missing id"));try{e(await this.fetch({link:"v1/audio-analysis/"+r}))}catch(r){t(new Error_1.UnexpectedError(r))}}))}}exports.default=Track;
