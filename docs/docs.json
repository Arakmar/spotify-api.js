{"class":{"Client":{"description":"Spotify Client class to interact with spotify api! Remember client.user can only be used when you are using a scoped token.","example":"client","params":[["token","string","Your oauth token",true]],"properties":{"token":{"description":"Your auth token","type":"string"},"utils":{"description":"Returns new util class","type":"Util","href":"https://spotify-api-js-test.netlify.app/#/class/util"},"oauth":{"description":"All authorization endpoints","type":"Auth","href":"https://spotify-api-js-test.netlify.app/#/class/auth"},"albums":{"description":"Album api endpoints","type":"Album","href":"https://spotify-api-js-test.netlify.app/#/class/album"},"artists":{"description":"Artist api endpoints","type":"Artist","href":"https://spotify-api-js-test.netlify.app/#/class/artist"},"playlists":{"description":"Playlist api endpoints","type":"Playlist","href":"https://spotify-api-js-test.netlify.app/#/class/playlist"},"tracks":{"description":"Track api endpoints","type":"Track","href":"https://spotify-api-js-test.netlify.app/#/class/track"},"users":{"description":"User api endpoints","type":"User","href":"https://spotify-api-js-test.netlify.app/#/class/user"},"episodes":{"description":"Episode api endpoints","type":"Episode","href":"https://spotify-api-js-test.netlify.app/#/class/episode"},"shows":{"description":"Show api endpoints","type":"Show","href":"https://spotify-api-js-test.netlify.app/#/class/show"},"browse":{"description":"Spotify browsing api endpoints","type":"Browse","href":"https://spotify-api-js-test.netlify.app/#/class/browse"},"user":{"description":"Current User api endpoints","type":"UserClient","href":"https://spotify-api-js-test.netlify.app/#/class/userclient"}},"methods":{"search":{"description":"Search through various types. But will not have advanced option.","returns":"Promise<any>","parameters":[["query","string","Your query to search"],["options","SearchOptions","Search options",true]]},"login":{"description":"Login to your spotify client.","returns":"void","parameters":[["token","string","Your token"]]}}},"Auth":{"description":"Oauth class. All auth endpoints.","example":"auth","params":[["token","string","Your oauth token",true]],"properties":{"token":{"description":"Your auth token","type":"string"}},"methods":{"get":{"description":"Returns a new api auth token","returns":"Promise<string>","parameters":[["options","AuthGetOptions","Your client secret and client id in object form"]]},"refresh":{"description":"Refreshes and gets a new authorization token at the same time can make a new scoped access_token by using code query sent by spotify authorization.","returns":"Promise<AuthRefresh>","parameters":[["options","AuthRefreshOptions","Your client id, client secret and redirect uri in object form"]]},"build":{"description":"Builds an Authorization String","returns":"Promise<string>","parameters":[["options","AuthBuildOptions","Your client id, client secret and redirect uri in object form"]]}}},"Util":{"description":"Utility class. All utility methods are present here.","example":"util","params":[["token","string","Your oauth token",true]],"properties":{"token":{"description":"Your auth token","type":"string"}},"methods":{"hexToRgb":{"description":"Coverts hex code to rgb number array","returns":"number[]","parameters":[["hex","string","Hex code to convert"]]},"fetch":{"description":"Quick method to fetch from spotify api. Will return the data required or will throw error if bad request.","returns":"Promise<any>","parameters":[["options","FetchOptions","Options to fetch"]]},"getURIData":{"description":"Returns the spotify uri data requested","returns":"Promise<any>","parameters":[["uri","string","Uri"]]},"getCodeImage":{"description":"Returns the code image url by the spotify uri","returns":"Promise<string>","parameters":[["uri","string","Uri"]]}}},"Browse":{"description":"All browse endpoints in the form of class","example":"browse","properties":{"token":{"description":"Your auth token","type":"string"}},"methods":{"getCategory":{"description":"Returns the information about the category by the id provided.","returns":"Promise<any>","parameters":[["id","string","Id of the category"]]},"getCategoryPlaylists":{"description":"Returns the playlists about the category by the id provided.","returns":"Promise<any>","parameters":[["id","string","Id of the category"],["limit","number","Limit your results",true]]},"categories":{"description":"Returns the list of all categories.","returns":"Promise<any>","parameters":[["limit","number","Limit your results",true]]},"featuredCategories":{"description":"Returns the list of all featured categories.","returns":"Promise<any>","parameters":[["limit","number","Limit your results",true]]},"newReleases":{"description":"Returns the list of all new releases.","returns":"Promise<any>","parameters":[["limit","number","Limit your results",true]]}}}},"typedefs":{"SearchOptions":{"description":"Search options object structure.","parameters":[["limit","number","Limit of results",true],["type","string[]","Type of search",true]]},"AdvancedSearchOptions":{"description":"Advanced search options object structure.","parameters":[["limit","number","Limit of results",true],["advanced","boolean","Making advanced option to true will return you the codeImage and dominantColor with it"]]},"AuthGetOptions":{"description":"Auth.get options object structure.","parameters":[["client_id","string","Your spotify app client id"],["client_secret","string","Your spotify app client secret"]]},"AuthBuildOptions":{"description":"Auth.build options object structure.","parameters":[["client_id","string","Your spotify app client id"],["redirect_uri","string","Url where the user will be redirect after the login"],["scopes","string","The scopes you need from the user while authorizing in a string in the format of \"scope1 scope2\"",true]]},"AuthRefreshOptions":{"description":"Auth.refresh options object structure.","parameters":[["client_id","string","Your spotify app client id"],["client_secret","string","Your spotify app client secret"],["code","string","Code query sent by the spotify authorization. You can use the refresh_token also to get a new access_token."],["redirect_uri","string","This redirect uri would not actually redirect you. This is only for validation. You need to enter the same uri/url used in the authorization link or Auth.build"]]},"AuthRefresh":{"description":"Object structure returned by Auth.refresh.","parameters":[["access_token","string","User access token"],["token_type","string","Type of the token"],["expires_in","number","Time in which the access_token expires"],["refresh_token","string","Token which you can use to refresh in options.code and get a new token using Auth.refresh method"],["scope","string","Authorization scopes you have requested"]]},"FetchOptions":{"description":"Util.fetch options object structure.","parameters":[["link","string","Link after https://api.spotify.com/"],["params","object","All the query parameters in object form",true],["headers","object","Additional headers than Authorization header",true],["method","string","By default the fetch methods uses GET method. You can set your own method",true]]}}}