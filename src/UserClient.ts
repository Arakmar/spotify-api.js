import { UnexpectedError } from './Errors';
import { Image, RawObject } from './Types';
import Util from './Util';

/**
 * A class which accesses the current user endpoints!
 */
export default class UserClient{

    token: string;
    
    name: string;
    country: string;
    email: string;
    externalUrls: RawObject;
    totalFollowers: number;
    href: string;
    id: string;
    images: Image[];
    product: 'premium' | 'free' | 'open' | 'unknown';
    uri: string;

    util!: Util;

    /**
     * The same client but manages current user endpoints and requires a current user api token not a token which is generated by client and client secret
     * 
     * @param token Your spotify current user token!
     * @example const user = new UserClient('token');
     */
    constructor(token: string){
        this.token = token;

        this.name = '';
        this.country = '';
        this.email = 'unknown';
        this.externalUrls = {};
        this.totalFollowers = 0;
        this.product = 'unknown';
        this.images = [];
        this.uri = '';
        this.id = '';
        this.href = '';

        Object.defineProperty(this, 'util', { value: new Util(token) });
    }

    /**
     * Returns current user details
     * 
     * @example const user = await user.me(); 
     */
    async me(): Promise<this> {

        try{
            const data = await this.util.fetch('/me');

            this.name = data.display_name;
            this.country = data.country || 'unknown';
            this.id = data.id;
            this.email = data.email || 'unknown';
            this.externalUrls = data.external_urls;
            this.totalFollowers = data.followers.total;
            this.href = data.href;
            this.images = data.images;
            this.product = data.product || 'unknown';
            this.uri = data.uri;
        }catch(e){
            throw new UnexpectedError(e);
        }

        return this;

    }

};